<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gec.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.gec.domain.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="deptId" jdbcType="VARCHAR" property="deptid" />
  </resultMap>
  
  <resultMap type="com.gec.domain.User" id="fullUserMap">
		<id column="id" property="id"/>
		<result column="username" property="username"/>
		<result column="nickName" property="nickname"/>
		<result column="password" property="password"/>
		<!-- 多对一关系 Dept dept [部门] --> 
		<association property="dept" javaType="com.gec.domain.Dept">
			<id column="deptId" property="id"/>
			<result column="deptName" property="deptname"/>
			<result column="d_desc" property="descript"/>
		</association>
		<!-- 封装角色集 -->
		<collection property="roles"
			column="roleId" ofType="com.gec.domain.Role">
			<!-- {Role}  roleId,  roleName,  descript  -->
			<id column="roleId" property="id"/>
			<result column="roleName" property="rolename"/>
			<result column="r_desc" property="descript"/>
		</collection>
	</resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, nickName, password, deptid
  </sql>
  <select id="selectByExample" parameterType="com.gec.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.gec.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gec.domain.User">
    insert into user (id, username, nickName, 
      password, deptId)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{deptid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gec.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="nickname != null">
        nickName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="deptid != null">
        deptId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        #{deptid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gec.domain.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickName = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.deptid != null">
        deptId = #{record.deptid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      nickName = #{record.nickname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      deptId = #{record.deptid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gec.domain.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        deptId = #{deptid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gec.domain.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      deptId = #{deptid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!--                 {My Code}                          -->
  
  <!-- 
		public User getUserByName(
			@Param("username") String username );
		fullUserMap: 这一个 User 对象, 包含的信息完整的。。	
	 -->
	 <select id="getUserByName" resultMap="fullUserMap">
	 	select u.id,u.username,u.nickName,u.password,
	 		   r.id roleId, r.roleName, r.descript r_desc,
	 		   d.id deptId, d.deptName, d.descript d_desc
	 	from user u
	 	left join user_role ur
	 		on u.id=ur.user_id
	 	left join role r
	 		on r.id=ur.role_id
	 	left join dept d
	 		on u.deptId=d.id
	 	where u.username=#{username}
	 </select>
	 
	 <select id="getManagerId" resultMap="fullUserMap">
	 	select u.id,u.username,u.nickName,u.password,
	 		   r.id roleId, r.roleName, r.descript r_desc,
	 		   d.id deptId, d.deptName, d.descript d_desc
	 	from user u
	 	left join user_role ur
	 		on u.id=ur.user_id
	 	left join role r
	 		on r.id=ur.role_id
	 	left join dept d
	 		on u.deptId=d.id
	 	where deptId=#{deptid} and r.roleName=#{rolename}
	 </select>
	 
	 <select id="getBossId" resultMap="fullUserMap">
	 	select u.id,u.username,u.nickName,u.password,
	 		   r.id roleId, r.roleName, r.descript r_desc,
	 		   d.id deptId, d.deptName, d.descript d_desc
	 	from user u
	 	left join user_role ur
	 		on u.id=ur.user_id
	 	left join role r
	 		on r.id=ur.role_id
	 	left join dept d
	 		on u.deptId=d.id
	 	where r.roleName=${rolename}
	 </select>
	 
	 <!-- 
		Set<String> getRolesByUserId( String userId );
	-->
	<select id="getRolesByUserId" resultType="string">
		select role_id from user_role ur 
		left join role r on ur.role_id = r.id 
		where user_id = #{userId}
	</select>
	
	<!-- 
		Set<String> findPermissions( @Param("roleId")String _roleId );
	 -->
	<select id="findPermissions" resultType="string">
		select permission from role_permission 
		where role_id = #{roleId}
	</select>
</mapper>